# Telegraf Configuration for Exec Scripts

[global_tags]
  service = "telegraf-exec"
  environment = "production"

[agent]
  interval = "${TELEGRAF_EXEC_INTERVAL}"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = "s"
  hostname = ""
  omit_hostname = false
  debug = ${TELEGRAF_DEBUG}
  quiet = ${TELEGRAF_QUIET}

[[outputs.influxdb_v2]]
  urls = ["${INFLUX_URL}"]
  token = "${INFLUX_TOKEN}"
  organization = "${INFLUX_ORG}"
  bucket = "${INFLUX_BUCKET}"
  timeout = "30s"

# Exec Input Plugin - Run custom scripts
[[inputs.exec]]
  ## Commands to execute
  ## Scripts should be placed in /scripts directory (mounted from host)
  commands = [
    "/scripts/custom_metrics.sh",
    "python3 /scripts/advanced_monitoring.py"
  ]

  ## Timeout for each command
  timeout = "${TELEGRAF_EXEC_TIMEOUT}"

  ## Data format to consume
  ## Options: influx, json, csv, value, graphite
  data_format = "influx"

  ## Name override for the measurement
  name_override = "custom_metrics"

  ## Add tags to all metrics
  [inputs.exec.tags]
    source = "exec_scripts"

# Example: Monitor specific application
[[inputs.exec]]
  commands = ["/scripts/app_monitor.sh"]
  timeout = "30s"
  data_format = "json"
  name_override = "application_metrics"
  json_name_key = "measurement"
  tag_keys = ["app_name", "version", "environment"]
  [inputs.exec.tags]
    monitoring_type = "application"

# Example: Database monitoring
[[inputs.exec]]
  commands = ["python3 /scripts/db_monitor.py"]
  timeout = "60s"
  data_format = "influx"
  name_override = "database_metrics"
  [inputs.exec.tags]
    monitoring_type = "database"

# Example: API endpoint monitoring
[[inputs.exec]]
  commands = ["/scripts/api_health_check.sh"]
  interval = "60s"
  timeout = "10s"
  data_format = "json"
  name_override = "api_health"
  json_query = "endpoints"
  [inputs.exec.tags]
    monitoring_type = "api"

# Internal metrics
[[inputs.internal]]
  collect_memstats = true